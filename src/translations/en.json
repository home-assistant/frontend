{
  "attribute": {
    "weather": {
      "humidity": "Humidity",
      "visibility": "Visibility",
      "wind_speed": "Wind speed"
    }
  },
  "domain": {
    "alarm_control_panel": "Alarm control panel",
    "automation": "Automation",
    "binary_sensor": "Binary sensor",
    "calendar": "Calendar",
    "camera": "Camera",
    "climate": "Climate",
    "configurator": "Configurator",
    "conversation": "Conversation",
    "cover": "Cover",
    "device_tracker": "Device tracker",
    "fan": "Fan",
    "history_graph": "History graph",
    "group": "Group",
    "image_processing": "Image processing",
    "input_boolean": "Input boolean",
    "input_datetime": "Input datetime",
    "input_select": "Input select",
    "input_number": "Input number",
    "input_text": "Input text",
    "light": "Light",
    "lock": "Lock",
    "mailbox": "Mailbox",
    "media_player": "Media player",
    "notify": "Notify",
    "plant": "Plant",
    "proximity": "Proximity",
    "remote": "Remote",
    "scene": "Scene",
    "script": "Script",
    "sensor": "Sensor",
    "sun": "Sun",
    "switch": "Switch",
    "updater": "Updater",
    "weblink": "Weblink",
    "zwave": "Z-Wave"
  },
  "panel": {
    "config": "Configuration",
    "states": "Overview",
    "map": "Map",
    "logbook": "Logbook",
    "history": "History",
    "mailbox": "Mailbox",
    "shopping_list": "Shopping list",
    "dev-services": "Services",
    "dev-states": "States",
    "dev-events": "Events",
    "dev-templates": "Templates",
    "dev-mqtt": "MQTT",
    "dev-info": "Info"
  },
  "state": {
    "default": {
      "off": "Off",
      "on": "On",
      "unknown": "Unknown",
      "unavailable": "Unavailable"
    },
    "alarm_control_panel": {
      "armed": "Armed",
      "disarmed": "Disarmed",
      "armed_home": "Armed home",
      "armed_away": "Armed away",
      "armed_night": "Armed night",
      "armed_custom_bypass": "Armed custom bypass",
      "pending": "Pending",
      "arming": "Arming",
      "disarming": "Disarming",
      "triggered": "Triggered"
    },
    "automation": {
      "off": "[%key:state::default::off%]",
      "on": "[%key:state::default::on%]"
    },
    "binary_sensor": {
      "default": {
        "off": "[%key:state::default::off%]",
        "on": "[%key:state::default::on%]"
      },
      "battery": {
        "off": "Normal",
        "on": "Low"
      },
      "cold": {
        "off": "[%key:state::binary_sensor::battery::off%]",
        "on": "Cold"
      },
      "connectivity": {
        "off": "Disconnected",
        "on": "Connected"
      },
      "door": {
        "off": "[%key:state::cover::closed%]",
        "on": "[%key:state::cover::open%]"
      },
      "garage_door": {
        "off": "[%key:state::cover::closed%]",
        "on": "[%key:state::cover::open%]"
      },
      "gas": {
        "off": "Clear",
        "on": "Detected"
      },
      "heat": {
        "off": "[%key:state::binary_sensor::battery::off%]",
        "on": "Hot"
      },
      "moisture": {
        "off": "Dry",
        "on": "Wet"
      },
      "motion": {
        "off": "[%key:state::binary_sensor::gas::off%]",
        "on": "[%key:state::binary_sensor::gas::on%]"
      },
      "occupancy": {
        "off": "[%key:state::binary_sensor::gas::off%]",
        "on": "[%key:state::binary_sensor::gas::on%]"
      },
      "opening": {
        "off": "[%key:state::cover::closed%]",
        "on": "[%key:state::cover::open%]"
      },
      "presence": {
        "off": "[%key:state::device_tracker::not_home%]",
        "on": "[%key:state::device_tracker::home%]"
      },
      "problem": {
        "off": "OK",
        "on": "Problem"
      },
      "safety": {
        "off": "Safe",
        "on": "Unsafe"
      },
      "smoke": {
        "off": "[%key:state::binary_sensor::gas::off%]",
        "on": "[%key:state::binary_sensor::gas::on%]"
      },
      "sound": {
        "off": "[%key:state::binary_sensor::gas::off%]",
        "on": "[%key:state::binary_sensor::gas::on%]"
      },
      "vibration": {
        "off": "[%key:state::binary_sensor::gas::off%]",
        "on": "[%key:state::binary_sensor::gas::on%]"
      },
      "window": {
        "off": "[%key:state::cover::closed%]",
        "on": "[%key:state::cover::open%]"
      }
    },
    "calendar": {
      "off": "[%key:state::default::off%]",
      "on": "[%key:state::default::on%]"
    },
    "camera": {
      "recording": "Recording",
      "streaming": "Streaming",
      "idle": "Idle"
    },
    "climate": {
      "off": "[%key:state::default::off%]",
      "on": "[%key:state::default::on%]",
      "heat": "Heat",
      "cool": "Cool",
      "idle": "Idle",
      "auto": "Auto",
      "dry": "Dry",
      "fan_only": "Fan only",
      "eco": "Eco",
      "electric": "Electric",
      "performance": "Performance",
      "high_demand": "High demand",
      "heat_pump": "Heat pump",
      "gas": "Gas"
    },
    "configurator": {
      "configure": "Configure",
      "configured": "Configured"
    },
    "cover": {
      "open": "Open",
      "opening": "Opening",
      "closed": "Closed",
      "closing": "Closing",
      "stopped": "Stopped"
    },
    "device_tracker": {
      "home": "Home",
      "not_home": "Away"
    },
    "fan": {
      "off": "[%key:state::default::off%]",
      "on": "[%key:state::default::on%]"
    },
    "group": {
      "off": "[%key:state::default::off%]",
      "on": "[%key:state::default::on%]",
      "home": "[%key:state::device_tracker::home%]",
      "not_home": "[%key:state::device_tracker::not_home%]",
      "open": "[%key:state::cover::open%]",
      "opening": "[%key:state::cover::opening%]",
      "closed": "[%key:state::cover::closed%]",
      "closing": "[%key:state::cover::closing%]",
      "stopped": "[%key:state::cover::stopped%]",
      "locked": "[%key:state::lock::locked%]",
      "unlocked": "[%key:state::lock::unlocked%]",
      "ok": "[%key:state::binary_sensor::problem::off%]",
      "problem": "[%key:state::binary_sensor::problem::on%]"
    },
    "input_boolean": {
      "off": "[%key:state::default::off%]",
      "on": "[%key:state::default::on%]"
    },
    "light": {
      "off": "[%key:state::default::off%]",
      "on": "[%key:state::default::on%]"
    },
    "lock": {
      "locked": "Locked",
      "unlocked": "Unlocked"
    },
    "media_player": {
      "off": "[%key:state::default::off%]",
      "on": "[%key:state::default::on%]",
      "playing": "Playing",
      "paused": "Paused",
      "idle": "Idle",
      "standby": "Standby"
    },
    "plant": {
      "ok": "[%key:state::binary_sensor::problem::off%]",
      "problem": "[%key:state::binary_sensor::problem::on%]"
    },
    "remote": {
      "off": "[%key:state::default::off%]",
      "on": "[%key:state::default::on%]"
    },
    "scene": {
      "scening": "Scening"
    },
    "script": {
      "off": "[%key:state::default::off%]",
      "on": "[%key:state::default::on%]"
    },
    "sensor": {
      "off": "[%key:state::default::off%]",
      "on": "[%key:state::default::on%]"
    },
    "sun": {
      "above_horizon": "Above horizon",
      "below_horizon": "Below horizon"
    },
    "switch": {
      "off": "[%key:state::default::off%]",
      "on": "[%key:state::default::on%]"
    },
    "zwave": {
      "default": {
        "initializing": "Initializing",
        "dead": "Dead",
        "sleeping": "Sleeping",
        "ready": "Ready"
      },
      "query_stage": {
        "initializing": "[%key:state::zwave::default::initializing%] ({query_stage})",
        "dead": "[%key:state::zwave::default::dead%] ({query_stage})"
      }
    }
  },
  "state_badge": {
    "default": {
      "unknown": "Unk",
      "unavailable": "Unavai"
    },
    "alarm_control_panel": {
      "armed": "Armed",
      "disarmed": "Disarm",
      "armed_home": "[%key:state_badge::alarm_control_panel::armed%]",
      "armed_away": "[%key:state_badge::alarm_control_panel::armed%]",
      "armed_night": "[%key:state_badge::alarm_control_panel::armed%]",
      "armed_custom_bypass": "[%key:state_badge::alarm_control_panel::armed%]",
      "pending": "Pend",
      "arming": "Arming",
      "disarming": "Disarm",
      "triggered": "Trig"
    },
    "device_tracker": {
      "home": "[%key:state::device_tracker::home%]",
      "not_home": "[%key:state::device_tracker::not_home%]"
    }
  },
  "ui": {
    "card": {
      "camera": {
        "not_available": "Image not available"
      },
      "persistent_notification": {
        "dismiss": "Dismiss"
      }
    },
    "common": {
      "loading": "Loading",
      "cancel": "Cancel"
    },
    "duration": {
      "second": "{count} {count, plural,\n  one {second}\n  other {seconds}\n}",
      "day": "{count} {count, plural,\n  one {day}\n  other {days}\n}",
      "week": "{count} {count, plural,\n  one {week}\n  other {weeks}\n}"
    },
    "login-form": {
      "password": "Password",
      "remember": "Remember",
      "log_in": "Log in"
    },
    "sidebar": {
      "developer_tools": "Developer tools",
      "log_out": "Log out"
    },
    "panel": {
      "config": {
        "header": "Configure Home Assistant",
        "introduction": "Here it is possible to configure your components and Home Assistant. Not everything is possible to configure from the UI yet, but we're working on it.",
        "core": {
          "caption": "General",
          "description": "Validate your configuration file and control the server",
          "section": {
            "core": {
              "header": "Configuration and server control",
              "introduction": "Changing your configuration can be a tiresome process. We know. This section will try to make your life a little bit easier.",
              "validation": {
                "heading": "Configuration validation",
                "introduction": "Validate your configuration if you recently made some changes to your configuration and want to make sure that it is all valid",
                "check_config": "Check config",
                "valid": "Configuration valid!",
                "invalid": "Configuration invalid"
              },
              "reloading": {
                "heading": "Configuration reloading",
                "introduction": "Some parts of Home Assistant can reload without requiring a restart. Hitting reload will unload their current configuration and load the new one.",
                "core": "Reload core",
                "group": "Reload groups",
                "automation": "Reload automations",
                "script": "Reload scripts"
              },
              "server_management": {
                "heading": "Server management",
                "introduction": "Control your Home Assistant server… from Home Assistant.",
                "restart": "Restart",
                "stop": "Stop"
              }
            },
            "push_notifications": {
              "header": "Configure push notifications",
              "introduction": "Enable this setting to receive push notifications on this device",
              "push_notifications": "Push notifications"
            },
            "translation": {
              "header": "Choose a language",
              "introduction": "Choose a language for the Home Assistant interface on this device",
              "language": "Language"
            },
            "themes": {
              "header": "Set a theme",
              "introduction": "Choose 'Backend-selected' to use whatever theme the backend chooses or pick a theme for this device",
              "theme": "Theme"
            },
            "hassbian": {
              "header": "Bring Hassbian to the next level",
              "introduction": "Discover exciting add-ons to enhance your Home Assistant installation. Add an MQTT server or control a connected TV via HDMI-CEC.",
              "learn_more": "Learn more",
              "install": "Install"
            }
          }
        },
        "customize": {
          "caption": "Customization",
          "description": "Customize your entities"
        },
        "automation": {
          "caption": "Automation",
          "description": "Create and edit automations"
        },
        "script": {
          "caption": "Script",
          "description": "Create and edit scripts"
        },
        "zwave": {
          "caption": "Z-Wave",
          "description": "Manage your Z-Wave network"
        }
      },
      "history": {
        "showing_entries": "Showing entries for",
        "period": "Period"
      },
      "logbook": {
        "showing_entries": "[%key:ui::panel::history::showing_entries%]"
      },
      "mailbox": {
        "empty": "You do not have any messages",
        "playback_title": "Message playback",
        "delete_prompt": "Delete this message?",
        "delete_button": "Delete"
      },
      "shopping-list": {
        "clear_completed": "Clear completed",
        "add_item": "Add item",
        "microphone_tip": "Tap the microphone on the top right and say “Add candy to my shopping list”"
      }
    }
  }
}
