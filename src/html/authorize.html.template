<!DOCTYPE html>
<html>
  <head>
    <title>Authorize | Home Assistant</title>
    <%= renderTemplate("_header.html.template") %>
    <%= renderTemplate("_style_base.html.template") %>
    <style>
      html {
        font-size: 14px;
        height: 100%;
      }
      body {
        display: flex;
        flex-direction: column;
        box-sizing: border-box;
      }
      #content {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        gap: 1rem;
        padding: 1.5rem;
        border-radius: 0 0 1rem 1rem;

        min-width: 10rem;
        min-height: 10rem;
        flex-shrink: 0;
      }
      form {
        display: contents;
      }
      svg {
        width: 24px;
        height: 24px;
        flex-shrink: 0;
      }
      svg.error {
        color: var(--error-color);
      }
      svg.info {
        color: var(--tinted-text-color);
      }
      h1 {
        font-size: 24px;
        line-height: 32px;
        font-weight: 400;
        margin: 0;
      }
      p {
        opacity: 0.8;
        margin: 0;
      }
      div.error {
        display: flex;
        gap: 8px;
        justify-content: center;
        align-items: center;
        padding: 12px 14px;
        border-radius: 16px;
        background-color: rgb(var(--rgb-error-color), 0.2);
        
        align-self: stretch;
        margin-bottom: 8px;
      }
      .input-wrapper {
        display: flex;
        position: relative;
        overflow: hidden;
        flex-direction: column;

        align-self: stretch;
        border-radius: 4px 4px 0 0;
      }
      input:is([type=text], [type=number], [type=password]), select {
        background-color: transparent;
        color: inherit;
        border: none;
        height: 48px;
        padding: 0 16px;
        font-family: inherit;
        font-size: inherit;
      }
      input::placeholder {
        color: inherit;
      }
      input::-webkit-outer-spin-button,
      input::-webkit-inner-spin-button {
        appearance: none;
      }
      input[type=number] {
        appearance: textfield;
      }
      .bar {
        position: absolute;
        background-color: var(--bar-color);
        height: 2px;
        width: 100%;
        bottom: 0;
        pointer-events: none;
        transition: all 200ms;
      }
      input:is([type=text], [type=number], [type=password]):focus-visible, select:focus-visible {
        outline: none;
      }
      input:focus-visible + .bar, select:focus-visible + .bar {
        background-color: var(--primary-color);
        height: 4px;
      }
      label {
        display: flex;
        align-items: center;
        height: 48px;
        align-self: stretch;
        cursor: pointer;
      }
      input[type=checkbox] {
        width: 18px;
        height: 18px;
        margin: 0 16px 0 0;
        cursor: pointer;
      }

      select {
        padding: 20px 12px 6px 12px;
      }
      .name {
        position: absolute;
        left: 16px;
        top: 6px;
        font-size: 12px;
        pointer-events: none;
      }
      @supports (moz-appearance: none) {
        select {
          padding-left: 16px;
          padding-right: 16px;
        }
      }

      .buttons {
        display: flex;
        flex-direction: column;
        justify-content: center;
        gap: 8px;
      }
      .input-wrapper + .buttons {
        margin-top: 8px;
      }
      button {
        font-family: inherit;
        font-weight: 500;
        border: none;
        cursor: pointer;
        white-space: nowrap;
        height: 40px;
        border-radius: 20px;
      }
      button.tonal {
        background-color: rgb(var(--rgb-primary-color), 0.2);
        color: var(--tinted-text-color);
        padding: 0 20px;
      }
      button.main {
        background-color: var(--primary-color);
        color: var(--text-primary-color);
        padding: 0 20px;
      }

      @media (min-width: 32rem) {
        body {
          padding: 1rem;
        }
        #content {
          margin: auto;
          max-width: 32rem;
          border-radius: 1rem;
        }
        .buttons {
          flex-direction: row;
        }
      }

      /* Manually declare colors for performance */
      body {
        background-color: #ffffff;
        color: #212121;
        accent-color: #0288d1;
        --tinted-text-color: #50606e;
        --error-color: #db4437;
        --rgb-error-color: 219, 68, 55;
        --primary-color: #03a9f4;
        --rgb-primary-color: 3, 169, 244;
        --text-primary-color: #ffffff;
      }
      #content {
        background-color: #f2f4f9;
      }
      .input-wrapper {
        background-color: rgb(0, 0, 0, 0.08);
        --bar-color: rgb(0, 0, 0, 0.4);
      }
      input::placeholder, .name {
        opacity: 0.8;
      }
      @media (prefers-color-scheme: dark) {
        html {
          color-scheme: dark;
        }
        body {
          background-color: #111111;
          color: #e1e1e1;
          accent-color: #03a9f4;
          --tinted-text-color: #b7c9d9;
        }
        #content {
          background-color: #1c1c1c;
        }
        .input-wrapper {
          background-color: rgb(255, 255, 255, 0.05);
          --bar-color: rgb(255, 255, 255, 0.4);
        }
        input::placeholder, .name {
          opacity: 0.6;
        }
        .wordmark {
          fill: #F2F4F9;
        }
      }
    </style>
  </head>
  <body>
    <div id="content">
    </div>
    <%= renderTemplate("_js_base.html.template") %>
    <%= renderTemplate("_preload_roboto.html.template") %>
    <script crossorigin="use-credentials">
      // Safari 12 and below does not have a compliant ES2015 implementation of template literals, so we ship ES5
      window.latestJS = window.latestJS || !isS11_12;
      if (window.latestJS) {
        <% for (const entry of latestEntryJS) { %>
          import("<%= entry %>");
        <% } %>
        window.providersPromise = fetch("/auth/providers", {
          credentials: "same-origin",
        });
      }
    </script>
    <%= renderTemplate("_script_load_es5.html.template") %>
  </body>
</html>
