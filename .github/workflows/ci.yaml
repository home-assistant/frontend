name: CI

on:
  push:
    branches:
      - dev
      - master
  pull_request:
    branches:
      - dev
      - master

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out files from GitHub
        uses: actions/checkout@v2
      - name: Setting up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Get yarn cache path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Fetching Yarn cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install
        env:
          CI: true
      - name: Build resources
        run: ./node_modules/.bin/gulp gen-icons-json build-translations gather-gallery-demos
      - name: Run eslint
        run: ./node_modules/.bin/eslint '{**/src,src}/**/*.{js,ts,html}' --ignore-path .gitignore
      - name: Run tsc
        run: ./node_modules/.bin/tsc
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out files from GitHub
        uses: actions/checkout@v2
      - name: Setting up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Get yarn cache path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Fetching Yarn cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install
        env:
          CI: true
      - name: Run Mocha
        run: npm run mocha
  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Check out files from GitHub
        uses: actions/checkout@v2
      - name: Setting up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Get yarn cache path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Fetching Yarn cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install
        env:
          CI: true
      - name: Build Application
        run: ./node_modules/.bin/gulp build-app
        env:
          IS_TEST: "true"
  supervisor:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Check out files from GitHub
        uses: actions/checkout@v2
      - name: Setting up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Get yarn cache path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Fetching Yarn cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install
        env:
          CI: true
      - name: Build Application
        run: ./node_modules/.bin/gulp build-hassio
        env:
          IS_TEST: "true"
