{
    "panel": {
        "config": "Configuration",
        "states": "Overview",
        "map": "Map",
        "logbook": "Logbook",
        "history": "History",
        "mailbox": "Mailbox",
        "shopping_list": "Shopping list",
        "dev-services": "Services",
        "dev-states": "States",
        "dev-events": "Events",
        "dev-templates": "Templates",
        "dev-mqtt": "MQTT",
        "dev-info": "Info"
    },
    "state": {
        "default": {
            "off": "Off",
            "on": "On",
            "unknown": "Unknown",
            "unavailable": "Unavailable"
        },
        "alarm_control_panel": {
            "armed": "Armed",
            "disarmed": "Disarmed",
            "armed_home": "Armed home",
            "armed_away": "Armed away",
            "armed_night": "Armed night",
            "pending": "Pending",
            "arming": "Arming",
            "disarming": "Disarming",
            "triggered": "Triggered",
            "armed_custom_bypass": "Armed custom bypass"
        },
        "automation": {
            "off": "[%1$s]",
            "on": "[%1$s]"
        },
        "binary_sensor": {
            "default": {
                "off": "[%1$s]",
                "on": "[%1$s]"
            },
            "moisture": {
                "off": "Dry",
                "on": "Wet"
            },
            "gas": {
                "off": "Clear",
                "on": "Detected"
            },
            "motion": {
                "off": "[%1$s]",
                "on": "[%1$s]"
            },
            "occupancy": {
                "off": "[%1$s]",
                "on": "[%1$s]"
            },
            "smoke": {
                "off": "[%1$s]",
                "on": "[%1$s]"
            },
            "sound": {
                "off": "[%1$s]",
                "on": "[%1$s]"
            },
            "vibration": {
                "off": "[%1$s]",
                "on": "[%1$s]"
            },
            "opening": {
                "off": "[%1$s]",
                "on": "[%1$s]"
            },
            "safety": {
                "off": "Safe",
                "on": "Unsafe"
            },
            "presence": {
                "off": "[%1$s]",
                "on": "[%1$s]"
            },
            "battery": {
                "off": "Normal",
                "on": "Low"
            },
            "problem": {
                "off": "OK",
                "on": "Problem"
            },
            "connectivity": {
                "off": "Disconnected",
                "on": "Connected"
            },
            "cold": {
                "off": "[%1$s]",
                "on": "Cold"
            },
            "door": {
                "off": "[%1$s]",
                "on": "[%1$s]"
            },
            "garage_door": {
                "off": "[%1$s]",
                "on": "[%1$s]"
            },
            "heat": {
                "off": "[%1$s]",
                "on": "Hot"
            },
            "window": {
                "off": "[%1$s]",
                "on": "[%1$s]"
            },
            "lock": {
                "off": "[%1$s]",
                "on": "[%1$s]"
            }
        },
        "calendar": {
            "off": "[%1$s]",
            "on": "[%1$s]"
        },
        "camera": {
            "recording": "Recording",
            "streaming": "Streaming",
            "idle": "Idle"
        },
        "climate": {
            "off": "[%1$s]",
            "on": "[%1$s]",
            "heat": "Heat",
            "cool": "Cool",
            "idle": "Idle",
            "auto": "Auto",
            "dry": "Dry",
            "fan_only": "Fan only",
            "eco": "Eco",
            "electric": "Electric",
            "performance": "Performance",
            "high_demand": "High demand",
            "heat_pump": "Heat pump",
            "gas": "Gas"
        },
        "configurator": {
            "configure": "Configure",
            "configured": "Configured"
        },
        "cover": {
            "open": "Open",
            "opening": "Opening",
            "closed": "Closed",
            "closing": "Closing",
            "stopped": "Stopped"
        },
        "device_tracker": {
            "home": "Home",
            "not_home": "Away"
        },
        "fan": {
            "off": "[%1$s]",
            "on": "[%1$s]"
        },
        "group": {
            "off": "[%1$s]",
            "on": "[%1$s]",
            "home": "[%1$s]",
            "not_home": "[%1$s]",
            "open": "[%1$s]",
            "opening": "[%1$s]",
            "closed": "[%1$s]",
            "closing": "[%1$s]",
            "stopped": "[%1$s]",
            "locked": "[%1$s]",
            "unlocked": "[%1$s]",
            "ok": "[%1$s]",
            "problem": "[%1$s]"
        },
        "input_boolean": {
            "off": "[%1$s]",
            "on": "[%1$s]"
        },
        "light": {
            "off": "[%1$s]",
            "on": "[%1$s]"
        },
        "lock": {
            "locked": "Locked",
            "unlocked": "Unlocked"
        },
        "media_player": {
            "off": "[%1$s]",
            "on": "[%1$s]",
            "playing": "Playing",
            "paused": "Paused",
            "idle": "Idle",
            "standby": "Standby"
        },
        "plant": {
            "ok": "[%1$s]",
            "problem": "[%1$s]"
        },
        "remote": {
            "off": "[%1$s]",
            "on": "[%1$s]"
        },
        "scene": {
            "scening": "Scening"
        },
        "script": {
            "off": "[%1$s]",
            "on": "[%1$s]"
        },
        "sensor": {
            "off": "[%1$s]",
            "on": "[%1$s]"
        },
        "sun": {
            "above_horizon": "Above horizon",
            "below_horizon": "Below horizon"
        },
        "switch": {
            "off": "[%1$s]",
            "on": "[%1$s]"
        },
        "zwave": {
            "default": {
                "initializing": "Initializing",
                "dead": "Dead",
                "sleeping": "Sleeping",
                "ready": "Ready"
            },
            "query_stage": {
                "initializing": "[%1$s] (%1$s)",
                "dead": "[%1$s] (%1$s)"
            }
        }
    },
    "state_badge": {
        "default": {
            "unknown": "Unk",
            "unavailable": "Unavai"
        },
        "alarm_control_panel": {
            "armed": "Armed",
            "disarmed": "Disarm",
            "armed_home": "[%1$s]",
            "armed_away": "[%1$s]",
            "armed_night": "[%1$s]",
            "pending": "Pend",
            "arming": "Arming",
            "disarming": "Disarm",
            "triggered": "Trig",
            "armed_custom_bypass": "[%1$s]"
        },
        "device_tracker": {
            "home": "[%1$s]",
            "not_home": "[%1$s]"
        }
    },
    "ui": {
        "panel": {
            "shopping-list": {
                "clear_completed": "Clear completed",
                "add_item": "Add item",
                "microphone_tip": "Tap the microphone on the top right and say “Add candy to my shopping list”"
            },
            "history": {
                "showing_entries": "Showing entries for",
                "period": "Period"
            },
            "logbook": {
                "showing_entries": "[%1$s]"
            },
            "mailbox": {
                "empty": "You do not have any messages",
                "playback_title": "Message playback",
                "delete_prompt": "Delete this message?",
                "delete_button": "Delete"
            },
            "config": {
                "header": "Configure Home Assistant",
                "introduction": "Here it is possible to configure your components and Home Assistant. Not everything is possible to configure from the UI yet, but we're working on it.",
                "core": {
                    "caption": "General",
                    "description": "Validate your configuration file and control the server",
                    "section": {
                        "core": {
                            "header": "Configuration and server control",
                            "introduction": "Changing your configuration can be a tiresome process. We know. This section will try to make your life a little bit easier.",
                            "validation": {
                                "heading": "Configuration validation",
                                "introduction": "Validate your configuration if you recently made some changes to your configuration and want to make sure that it is all valid",
                                "check_config": "Check config",
                                "valid": "Configuration valid!",
                                "invalid": "Configuration invalid"
                            },
                            "reloading": {
                                "heading": "Configuration reloading",
                                "introduction": "Some parts of Home Assistant can reload without requiring a restart. Hitting reload will unload their current configuration and load the new one.",
                                "core": "Reload core",
                                "group": "Reload groups",
                                "automation": "Reload automations",
                                "script": "Reload scripts"
                            },
                            "server_management": {
                                "heading": "Server management",
                                "introduction": "Control your Home Assistant server… from Home Assistant.",
                                "restart": "Restart",
                                "stop": "Stop"
                            }
                        },
                        "push_notifications": {
                            "header": "Configure push notifications",
                            "introduction": "Enable this setting to receive push notifications on this device",
                            "push_notifications": "Push notifications"
                        },
                        "translation": {
                            "header": "Choose a language",
                            "introduction": "Choose a language for the Home Assistant interface on this device",
                            "language": "Language"
                        },
                        "themes": {
                            "header": "Set a theme",
                            "introduction": "Choose 'Backend-selected' to use whatever theme the backend chooses or pick a theme for this device",
                            "theme": "Theme"
                        },
                        "hassbian": {
                            "header": "Bring Hassbian to the next level",
                            "introduction": "Discover exciting add-ons to enhance your Home Assistant installation. Add an MQTT server or control a connected TV via HDMI-CEC.",
                            "learn_more": "Learn more",
                            "install": "Install"
                        }
                    }
                },
                "customize": {
                    "caption": "Customization",
                    "description": "Customize your entities"
                },
                "automation": {
                    "caption": "Automation",
                    "description": "Create and edit automations",
                    "picker": {
                        "header": "Automation editor",
                        "introduction": "The automation editor allows you to create and edit automations. Please read [the instructions](https:\/\/home-assistant.io\/docs\/automation\/editor\/) to make sure that you have configured Home Assistant correctly.",
                        "pick_automation": "Pick automation to edit",
                        "no_automations": "We couldn’t find any editable automations",
                        "add_automation": "Add automation"
                    },
                    "editor": {
                        "introduction": "Use automations to bring your home alive",
                        "default_name": "New Automation",
                        "save": "Save",
                        "unsaved_confirm": "You have unsaved changes. Are you sure you want to leave?",
                        "alias": "Name",
                        "triggers": {
                            "header": "Triggers",
                            "introduction": "Triggers are what starts the processing of an automation rule. It is possible to specify multiple triggers for the same rule. Once a trigger starts, Home Assistant will validate the conditions, if any, and call the action.\n\n[Learn more about triggers.](https:\/\/home-assistant.io\/docs\/automation\/trigger\/)",
                            "add": "Add trigger",
                            "duplicate": "Duplicate",
                            "delete": "[%1$s]",
                            "delete_confirm": "Sure you want to delete?",
                            "unsupported_platform": "Unsupported platform: %1$s",
                            "type_select": "Trigger type",
                            "type": {
                                "event": {
                                    "label": "Event",
                                    "event_type": "Event type",
                                    "event_data": "Event data"
                                },
                                "state": {
                                    "label": "State",
                                    "from": "From",
                                    "to": "To"
                                },
                                "homeassistant": {
                                    "label": "Home Assistant",
                                    "event": "Event:",
                                    "start": "Start",
                                    "shutdown": "Shutdown"
                                },
                                "mqtt": {
                                    "label": "MQTT",
                                    "topic": "Topic",
                                    "payload": "Payload (optional)"
                                },
                                "numeric_state": {
                                    "label": "Numeric state",
                                    "above": "Above",
                                    "below": "Below",
                                    "value_template": "Value template (optional)"
                                },
                                "sun": {
                                    "label": "Sun",
                                    "event": "[%1$s]",
                                    "sunrise": "Sunrise",
                                    "sunset": "Sunset",
                                    "offset": "Offset (optional)"
                                },
                                "template": {
                                    "label": "Template",
                                    "value_template": "Value template"
                                },
                                "time": {
                                    "label": "Time",
                                    "at": "At"
                                },
                                "zone": {
                                    "label": "Zone",
                                    "entity": "Entity with location",
                                    "zone": "[%1$s]",
                                    "event": "[%1$s]",
                                    "enter": "Enter",
                                    "leave": "Leave"
                                }
                            }
                        },
                        "conditions": {
                            "header": "Conditions",
                            "introduction": "Conditions are an optional part of an automation rule and can be used to prevent an action from happening when triggered. Conditions look very similar to triggers but are very different. A trigger will look at events happening in the system while a condition only looks at how the system looks right now. A trigger can observe that a switch is being turned on. A condition can only see if a switch is currently on or off.\n\n[Learn more about conditions.](https:\/\/home-assistant.io\/docs\/scripts\/conditions\/)",
                            "add": "Add condition",
                            "duplicate": "[%1$s]",
                            "delete": "[%1$s]",
                            "delete_confirm": "[%1$s]",
                            "unsupported_condition": "Unsupported condition: %1$s",
                            "type_select": "Condition type",
                            "type": {
                                "state": {
                                    "label": "[%1$s]",
                                    "state": "[%1$s]"
                                },
                                "numeric_state": {
                                    "label": "[%1$s]",
                                    "above": "[%1$s]",
                                    "below": "[%1$s]",
                                    "value_template": "[%1$s]"
                                },
                                "sun": {
                                    "label": "[%1$s]",
                                    "before": "Before:",
                                    "after": "After:",
                                    "before_offset": "Before offset (optional)",
                                    "after_offset": "After offset (optional)",
                                    "sunrise": "Sunrise",
                                    "sunset": "Sunset"
                                },
                                "template": {
                                    "label": "[%1$s]",
                                    "value_template": "[%1$s]"
                                },
                                "time": {
                                    "label": "[%1$s]",
                                    "after": "After",
                                    "before": "Before"
                                },
                                "zone": {
                                    "label": "[%1$s]",
                                    "entity": "[%1$s]",
                                    "zone": "[%1$s]"
                                }
                            }
                        },
                        "actions": {
                            "header": "Actions",
                            "introduction": "The actions are what Home Assistant will do when the automation is triggered.\n\n[Learn more about actions.](https:\/\/home-assistant.io\/docs\/automation\/action\/)",
                            "add": "Add action",
                            "duplicate": "[%1$s]",
                            "delete": "[%1$s]",
                            "delete_confirm": "[%1$s]",
                            "unsupported_action": "Unsupported action: %1$s",
                            "type_select": "Action type",
                            "type": {
                                "service": {
                                    "label": "Call service",
                                    "service_data": "Service data"
                                },
                                "delay": {
                                    "label": "Delay",
                                    "delay": "[%1$s]"
                                },
                                "wait_template": {
                                    "label": "Wait",
                                    "wait_template": "Wait Template",
                                    "timeout": "Timeout (optional)"
                                },
                                "condition": {
                                    "label": "Condition"
                                },
                                "event": {
                                    "label": "Fire event",
                                    "event": "[%1$s]",
                                    "service_data": "[%1$s]"
                                }
                            }
                        }
                    }
                },
                "script": {
                    "caption": "Script",
                    "description": "Create and edit scripts"
                },
                "zwave": {
                    "caption": "Z-Wave",
                    "description": "Manage your Z-Wave network"
                }
            }
        },
        "sidebar": {
            "log_out": "Log out",
            "developer_tools": "Developer tools"
        },
        "common": {
            "loading": "Loading",
            "cancel": "Cancel"
        },
        "duration": {
            "day": "%1$s {count, plural,\n  one %1$s\n  other %1$s\n}",
            "week": "%1$s {count, plural,\n  one %1$s\n  other %1$s\n}",
            "second": "%1$s {count, plural,\n  one %1$s\n  other %1$s\n}"
        },
        "login-form": {
            "password": "Password",
            "remember": "Remember",
            "log_in": "Log in"
        },
        "card": {
            "camera": {
                "not_available": "Image not available"
            },
            "persistent_notification": {
                "dismiss": "Dismiss"
            }
        },
        "components": {
            "entity": {
                "entity-picker": {
                    "entity": "Entity"
                }
            },
            "service-picker": {
                "service": "Service"
            }
        }
    },
    "domain": {
        "alarm_control_panel": "Alarm control panel",
        "automation": "Automation",
        "binary_sensor": "Binary sensor",
        "calendar": "Calendar",
        "camera": "Camera",
        "climate": "Climate",
        "configurator": "Configurator",
        "conversation": "Conversation",
        "cover": "Cover",
        "device_tracker": "Device tracker",
        "fan": "Fan",
        "history_graph": "History graph",
        "group": "Group",
        "image_processing": "Image processing",
        "input_boolean": "Input boolean",
        "input_datetime": "Input datetime",
        "input_select": "Input select",
        "input_number": "Input number",
        "input_text": "Input text",
        "light": "Light",
        "lock": "Lock",
        "mailbox": "Mailbox",
        "media_player": "Media player",
        "notify": "Notify",
        "plant": "Plant",
        "proximity": "Proximity",
        "remote": "Remote",
        "scene": "Scene",
        "script": "Script",
        "sensor": "Sensor",
        "sun": "Sun",
        "switch": "Switch",
        "updater": "Updater",
        "weblink": "Weblink",
        "zwave": "Z-Wave"
    },
    "attribute": {
        "weather": {
            "humidity": "Humidity",
            "visibility": "Visibility",
            "wind_speed": "Wind speed"
        }
    }
}