{
    "panel": {
        "config": "Configuration",
        "states": "Overview",
        "map": "Map",
        "logbook": "Logbook",
        "history": "History",
        "mailbox": "Mailbox",
        "shopping_list": "Shopping list",
        "dev-services": "Services",
        "dev-states": "States",
        "dev-events": "Events",
        "dev-templates": "Templates",
        "dev-mqtt": "MQTT",
        "dev-info": "Info",
        "calendar": "Calendar",
        "profile": "Profile"
    },
    "state": {
        "default": {
            "off": "Off",
            "on": "On",
            "unknown": "Unknown",
            "unavailable": "Unavailable"
        },
        "alarm_control_panel": {
            "armed": "Armed",
            "disarmed": "Disarmed",
            "armed_home": "Armed home",
            "armed_away": "Armed away",
            "armed_night": "Armed night",
            "pending": "Pending",
            "arming": "Arming",
            "disarming": "Disarming",
            "triggered": "Triggered",
            "armed_custom_bypass": "Armed custom bypass"
        },
        "automation": {
            "off": "Off",
            "on": "On"
        },
        "binary_sensor": {
            "default": {
                "off": "Off",
                "on": "On"
            },
            "moisture": {
                "off": "Dry",
                "on": "Wet"
            },
            "gas": {
                "off": "Clear",
                "on": "Detected"
            },
            "motion": {
                "off": "Clear",
                "on": "Detected"
            },
            "occupancy": {
                "off": "Clear",
                "on": "Detected"
            },
            "smoke": {
                "off": "Clear",
                "on": "Detected"
            },
            "sound": {
                "off": "Clear",
                "on": "Detected"
            },
            "vibration": {
                "off": "Clear",
                "on": "Detected"
            },
            "opening": {
                "off": "Closed",
                "on": "Open"
            },
            "safety": {
                "off": "Safe",
                "on": "Unsafe"
            },
            "presence": {
                "off": "Away",
                "on": "Home"
            },
            "battery": {
                "off": "Normal",
                "on": "Low"
            },
            "problem": {
                "off": "OK",
                "on": "Problem"
            },
            "connectivity": {
                "off": "Disconnected",
                "on": "Connected"
            },
            "cold": {
                "off": "Normal",
                "on": "Cold"
            },
            "door": {
                "off": "Closed",
                "on": "Open"
            },
            "garage_door": {
                "off": "Closed",
                "on": "Open"
            },
            "heat": {
                "off": "Normal",
                "on": "Hot"
            },
            "window": {
                "off": "Closed",
                "on": "Open"
            },
            "lock": {
                "off": "Locked",
                "on": "Unlocked"
            }
        },
        "calendar": {
            "off": "Off",
            "on": "On"
        },
        "camera": {
            "recording": "Recording",
            "streaming": "Streaming",
            "idle": "Idle"
        },
        "climate": {
            "off": "Off",
            "on": "On",
            "heat": "Heat",
            "cool": "Cool",
            "idle": "Idle",
            "auto": "Auto",
            "dry": "Dry",
            "fan_only": "Fan only",
            "eco": "Eco",
            "electric": "Electric",
            "performance": "Performance",
            "high_demand": "High demand",
            "heat_pump": "Heat pump",
            "gas": "Gas"
        },
        "configurator": {
            "configure": "Configure",
            "configured": "Configured"
        },
        "cover": {
            "open": "Open",
            "opening": "Opening",
            "closed": "Closed",
            "closing": "Closing",
            "stopped": "Stopped"
        },
        "device_tracker": {
            "home": "Home",
            "not_home": "Away"
        },
        "fan": {
            "off": "Off",
            "on": "On"
        },
        "group": {
            "off": "Off",
            "on": "On",
            "home": "Home",
            "not_home": "Away",
            "open": "Open",
            "opening": "Opening",
            "closed": "Closed",
            "closing": "Closing",
            "stopped": "Stopped",
            "locked": "Locked",
            "unlocked": "Unlocked",
            "ok": "OK",
            "problem": "Problem"
        },
        "input_boolean": {
            "off": "Off",
            "on": "On"
        },
        "light": {
            "off": "Off",
            "on": "On"
        },
        "lock": {
            "locked": "Locked",
            "unlocked": "Unlocked"
        },
        "media_player": {
            "off": "Off",
            "on": "On",
            "playing": "Playing",
            "paused": "Paused",
            "idle": "Idle",
            "standby": "Standby"
        },
        "plant": {
            "ok": "OK",
            "problem": "Problem"
        },
        "remote": {
            "off": "Off",
            "on": "On"
        },
        "scene": {
            "scening": "Scening"
        },
        "script": {
            "off": "Off",
            "on": "On"
        },
        "sensor": {
            "off": "Off",
            "on": "On"
        },
        "sun": {
            "above_horizon": "Above horizon",
            "below_horizon": "Below horizon"
        },
        "switch": {
            "off": "Off",
            "on": "On"
        },
        "zwave": {
            "default": {
                "initializing": "Initializing",
                "dead": "Dead",
                "sleeping": "Sleeping",
                "ready": "Ready"
            },
            "query_stage": {
                "initializing": "Initializing ({query_stage})",
                "dead": "Dead ({query_stage})"
            }
        },
        "weather": {
            "clear-night": "Clear, night",
            "cloudy": "Cloudy",
            "fog": "Fog",
            "hail": "Hail",
            "lightning": "Lightning",
            "lightning-rainy": "Lightning, rainy",
            "partlycloudy": "Partly cloudy",
            "pouring": "Pouring",
            "rainy": "Rainy",
            "snowy": "Snowy",
            "snowy-rainy": "Snowy, rainy",
            "sunny": "Sunny",
            "windy": "Windy",
            "windy-variant": "Windy"
        },
        "vacuum": {
            "cleaning": "Cleaning",
            "docked": "Docked",
            "error": "Error",
            "idle": "Idle",
            "off": "Off",
            "on": "On",
            "paused": "Paused",
            "returning": "Returning to dock"
        }
    },
    "state_badge": {
        "default": {
            "unknown": "Unk",
            "unavailable": "Unavai"
        },
        "alarm_control_panel": {
            "armed": "Armed",
            "disarmed": "Disarm",
            "armed_home": "Armed",
            "armed_away": "Armed",
            "armed_night": "Armed",
            "pending": "Pend",
            "arming": "Arming",
            "disarming": "Disarm",
            "triggered": "Trig",
            "armed_custom_bypass": "Armed"
        },
        "device_tracker": {
            "home": "Home",
            "not_home": "Away"
        }
    },
    "ui": {
        "panel": {
            "shopping-list": {
                "clear_completed": "Clear completed",
                "add_item": "Add item",
                "microphone_tip": "Tap the microphone on the top right and say “Add candy to my shopping list”"
            },
            "history": {
                "showing_entries": "Showing entries for",
                "period": "Period"
            },
            "logbook": {
                "showing_entries": "Showing entries for"
            },
            "mailbox": {
                "empty": "You do not have any messages",
                "playback_title": "Message playback",
                "delete_prompt": "Delete this message?",
                "delete_button": "Delete"
            },
            "config": {
                "header": "Configure Home Assistant",
                "introduction": "Here it is possible to configure your components and Home Assistant. Not everything is possible to configure from the UI yet, but we're working on it.",
                "core": {
                    "caption": "General",
                    "description": "Validate your configuration file and control the server",
                    "section": {
                        "core": {
                            "header": "Configuration and Server Control",
                            "introduction": "Changing your configuration can be a tiresome process. We know. This section will try to make your life a little bit easier.",
                            "validation": {
                                "heading": "Configuration validation",
                                "introduction": "Validate your configuration if you recently made some changes to your configuration and want to make sure that it is all valid",
                                "check_config": "Check config",
                                "valid": "Configuration valid!",
                                "invalid": "Configuration invalid"
                            },
                            "reloading": {
                                "heading": "Configuration reloading",
                                "introduction": "Some parts of Home Assistant can reload without requiring a restart. Hitting reload will unload their current configuration and load the new one.",
                                "core": "Reload core",
                                "group": "Reload groups",
                                "automation": "Reload automations",
                                "script": "Reload scripts"
                            },
                            "server_management": {
                                "heading": "Server management",
                                "introduction": "Control your Home Assistant server… from Home Assistant.",
                                "restart": "Restart",
                                "stop": "Stop"
                            }
                        }
                    }
                },
                "customize": {
                    "caption": "Customization",
                    "description": "Customize your entities"
                },
                "automation": {
                    "caption": "Automation",
                    "description": "Create and edit automations",
                    "picker": {
                        "header": "Automation Editor",
                        "introduction": "The automation editor allows you to create and edit automations. Please read [the instructions](https:\/\/home-assistant.io\/docs\/automation\/editor\/) to make sure that you have configured Home Assistant correctly.",
                        "pick_automation": "Pick automation to edit",
                        "no_automations": "We couldn’t find any editable automations",
                        "add_automation": "Add automation"
                    },
                    "editor": {
                        "introduction": "Use automations to bring your home alive",
                        "default_name": "New Automation",
                        "save": "Save",
                        "unsaved_confirm": "You have unsaved changes. Are you sure you want to leave?",
                        "alias": "Name",
                        "triggers": {
                            "header": "Triggers",
                            "introduction": "Triggers are what starts the processing of an automation rule. It is possible to specify multiple triggers for the same rule. Once a trigger starts, Home Assistant will validate the conditions, if any, and call the action.\n\n[Learn more about triggers.](https:\/\/home-assistant.io\/docs\/automation\/trigger\/)",
                            "add": "Add trigger",
                            "duplicate": "Duplicate",
                            "delete": "Delete",
                            "delete_confirm": "Sure you want to delete?",
                            "unsupported_platform": "Unsupported platform: {platform}",
                            "type_select": "Trigger type",
                            "type": {
                                "event": {
                                    "label": "Event",
                                    "event_type": "Event type",
                                    "event_data": "Event data"
                                },
                                "state": {
                                    "label": "State",
                                    "from": "From",
                                    "to": "To",
                                    "for": "For"
                                },
                                "homeassistant": {
                                    "label": "Home Assistant",
                                    "event": "Event:",
                                    "start": "Start",
                                    "shutdown": "Shutdown"
                                },
                                "mqtt": {
                                    "label": "MQTT",
                                    "topic": "Topic",
                                    "payload": "Payload (optional)"
                                },
                                "numeric_state": {
                                    "label": "Numeric state",
                                    "above": "Above",
                                    "below": "Below",
                                    "value_template": "Value template (optional)"
                                },
                                "sun": {
                                    "label": "Sun",
                                    "event": "Event:",
                                    "sunrise": "Sunrise",
                                    "sunset": "Sunset",
                                    "offset": "Offset (optional)"
                                },
                                "template": {
                                    "label": "Template",
                                    "value_template": "Value template"
                                },
                                "time": {
                                    "label": "Time",
                                    "at": "At"
                                },
                                "zone": {
                                    "label": "Zone",
                                    "entity": "Entity with location",
                                    "zone": "Zone",
                                    "event": "Event:",
                                    "enter": "Enter",
                                    "leave": "Leave"
                                }
                            }
                        },
                        "conditions": {
                            "header": "Conditions",
                            "introduction": "Conditions are an optional part of an automation rule and can be used to prevent an action from happening when triggered. Conditions look very similar to triggers but are very different. A trigger will look at events happening in the system while a condition only looks at how the system looks right now. A trigger can observe that a switch is being turned on. A condition can only see if a switch is currently on or off.\n\n[Learn more about conditions.](https:\/\/home-assistant.io\/docs\/scripts\/conditions\/)",
                            "add": "Add condition",
                            "duplicate": "Duplicate",
                            "delete": "Delete",
                            "delete_confirm": "Sure you want to delete?",
                            "unsupported_condition": "Unsupported condition: {condition}",
                            "type_select": "Condition type",
                            "type": {
                                "state": {
                                    "label": "State",
                                    "state": "State"
                                },
                                "numeric_state": {
                                    "label": "Numeric state",
                                    "above": "Above",
                                    "below": "Below",
                                    "value_template": "Value template (optional)"
                                },
                                "sun": {
                                    "label": "Sun",
                                    "before": "Before:",
                                    "after": "After:",
                                    "before_offset": "Before offset (optional)",
                                    "after_offset": "After offset (optional)",
                                    "sunrise": "Sunrise",
                                    "sunset": "Sunset"
                                },
                                "template": {
                                    "label": "Template",
                                    "value_template": "Value template"
                                },
                                "time": {
                                    "label": "Time",
                                    "after": "After",
                                    "before": "Before"
                                },
                                "zone": {
                                    "label": "Zone",
                                    "entity": "Entity with location",
                                    "zone": "Zone"
                                }
                            }
                        },
                        "actions": {
                            "header": "Actions",
                            "introduction": "The actions are what Home Assistant will do when the automation is triggered.\n\n[Learn more about actions.](https:\/\/home-assistant.io\/docs\/automation\/action\/)",
                            "add": "Add action",
                            "duplicate": "Duplicate",
                            "delete": "Delete",
                            "delete_confirm": "Sure you want to delete?",
                            "unsupported_action": "Unsupported action: {action}",
                            "type_select": "Action type",
                            "type": {
                                "service": {
                                    "label": "Call service",
                                    "service_data": "Service data"
                                },
                                "delay": {
                                    "label": "Delay",
                                    "delay": "Delay"
                                },
                                "wait_template": {
                                    "label": "Wait",
                                    "wait_template": "Wait Template",
                                    "timeout": "Timeout (optional)"
                                },
                                "condition": {
                                    "label": "Condition"
                                },
                                "event": {
                                    "label": "Fire event",
                                    "event": "Event:",
                                    "service_data": "Service data"
                                }
                            }
                        }
                    }
                },
                "script": {
                    "caption": "Script",
                    "description": "Create and edit scripts"
                },
                "zwave": {
                    "caption": "Z-Wave",
                    "description": "Manage your Z-Wave network"
                },
                "users": {
                    "caption": "Users",
                    "description": "Manage users",
                    "picker": {
                        "title": "Users"
                    },
                    "editor": {
                        "rename_user": "Rename user",
                        "change_password": "Change password",
                        "activate_user": "Activate user",
                        "deactivate_user": "Deactivate user",
                        "delete_user": "Delete user"
                    }
                },
                "cloud": {
                    "caption": "Home Assistant Cloud",
                    "description_login": "Logged in as {email}",
                    "description_not_login": "Not logged in"
                },
                "integrations": {
                    "caption": "Integrations",
                    "description": "Manage connected devices and services",
                    "discovered": "Discovered",
                    "configured": "Configured",
                    "new": "Set up a new integration",
                    "configure": "Configure",
                    "none": "Nothing configured yet",
                    "config_entry": {
                        "no_devices": "This integration has no devices.",
                        "no_device": "Entities without devices",
                        "delete_confirm": "Are you sure you want to delete this integration?",
                        "restart_confirm": "Restart Home Assistant to finish removing this integration",
                        "manuf": "by {manufacturer}",
                        "hub": "Connected via",
                        "firmware": "Firmware: {version}",
                        "device_unavailable": "device unavailable",
                        "entity_unavailable": "entity unavailable"
                    }
                }
            },
            "profile": {
                "push_notifications": {
                    "header": "Push Notifications",
                    "description": "Send notifications to this device.",
                    "error_load_platform": "Configure notify.html5.",
                    "error_use_https": "Requires SSL enabled for frontend.",
                    "push_notifications": "Push notifications",
                    "link_promo": "Learn more"
                },
                "language": {
                    "header": "Language",
                    "link_promo": "Help translating",
                    "dropdown_label": "Language"
                },
                "themes": {
                    "header": "Theme",
                    "error_no_theme": "No themes available.",
                    "link_promo": "Learn about themes",
                    "dropdown_label": "Theme"
                },
                "refresh_tokens": {
                    "header": "Refresh Tokens",
                    "description": "Each refresh token represents a login session. Refresh tokens will be automatically removed when you click log out. The following refresh tokens are currently active for your account.",
                    "token_title": "Refresh token for {clientId}",
                    "created_at": "Created at {date}",
                    "confirm_delete": "Are you sure you want to delete the refresh token for {name}?",
                    "delete_failed": "Failed to delete the refresh token.",
                    "last_used": "Last used at {date} from {location}",
                    "not_used": "Has never been used",
                    "current_token_tooltip": "Unable to delete current refresh token"
                },
                "long_lived_access_tokens": {
                    "header": "Long-Lived Access Tokens",
                    "description": "Create long-lived access tokens to allow your scripts to interact with your Home Assistant instance. Each token will be valid for 10 years from creation. The following long-lived access tokens are currently active.",
                    "learn_auth_requests": "Learn how to make authenticated requests.",
                    "created_at": "Created at {date}",
                    "confirm_delete": "Are you sure you want to delete the access token for {name}?",
                    "delete_failed": "Failed to delete the access token.",
                    "create": "Create Token",
                    "create_failed": "Failed to create the access token.",
                    "prompt_name": "Name?",
                    "prompt_copy_token": "Copy your access token. It will not be shown again.",
                    "empty_state": "You have no long-lived access tokens yet.",
                    "last_used": "Last used at {date} from {location}",
                    "not_used": "Has never been used"
                },
                "current_user": "You are currently logged in as {fullName}.",
                "is_owner": "You are an owner.",
                "logout": "Log out",
                "change_password": {
                    "header": "Change Password",
                    "current_password": "Current Password",
                    "new_password": "New Password",
                    "confirm_new_password": "Confirm New Password",
                    "error_required": "Required",
                    "submit": "Submit"
                },
                "mfa": {
                    "header": "Multi-factor Authentication Modules",
                    "disable": "Disable",
                    "enable": "Enable",
                    "confirm_disable": "Are you sure you want to disable {name}?"
                },
                "mfa_setup": {
                    "title_aborted": "Aborted",
                    "title_success": "Success!",
                    "step_done": "Setup done for {step}",
                    "close": "Close",
                    "submit": "Submit"
                }
            },
            "page-authorize": {
                "initializing": "Initializing",
                "authorizing_client": "You're about to give {clientId} access to your Home Assistant instance.",
                "logging_in_with": "Logging in with **{authProviderName}**.",
                "pick_auth_provider": "Or log in with",
                "abort_intro": "Login aborted",
                "form": {
                    "working": "Please wait",
                    "unknown_error": "Something went wrong",
                    "providers": {
                        "homeassistant": {
                            "step": {
                                "init": {
                                    "data": {
                                        "username": "Username",
                                        "password": "Password"
                                    }
                                },
                                "mfa": {
                                    "data": {
                                        "code": "Two-factor Authentication Code"
                                    },
                                    "description": "Open the **{mfa_module_name}** on your device to view your two-factor authentication code and verify your identity:"
                                }
                            },
                            "error": {
                                "invalid_auth": "Invalid username or password",
                                "invalid_code": "Invalid authentication code"
                            },
                            "abort": {
                                "login_expired": "Session expired, please login again."
                            }
                        },
                        "legacy_api_password": {
                            "step": {
                                "init": {
                                    "data": {
                                        "password": "API Password"
                                    },
                                    "description": "Please input the API password in your http config:"
                                },
                                "mfa": {
                                    "data": {
                                        "code": "Two-factor Authentication Code"
                                    },
                                    "description": "Open the **{mfa_module_name}** on your device to view your two-factor authentication code and verify your identity:"
                                }
                            },
                            "error": {
                                "invalid_auth": "Invalid API password",
                                "invalid_code": "Invalid authentication code"
                            },
                            "abort": {
                                "no_api_password_set": "You don't have an API password configured.",
                                "login_expired": "Session expired, please login again."
                            }
                        },
                        "trusted_networks": {
                            "step": {
                                "init": {
                                    "data": {
                                        "user": "User"
                                    },
                                    "description": "Please select a user you want to login as:"
                                }
                            },
                            "abort": {
                                "not_whitelisted": "Your computer is not whitelisted."
                            }
                        }
                    }
                }
            },
            "page-onboarding": {
                "intro": "Are you ready to awaken your home, reclaim your privacy and join a worldwide community of tinkerers?",
                "user": {
                    "intro": "Let's get started by creating a user account.",
                    "required_field": "Required",
                    "data": {
                        "name": "Name",
                        "username": "Username",
                        "password": "Password"
                    },
                    "create_account": "Create Account",
                    "error": {
                        "required_fields": "Fill in all required fields"
                    }
                }
            }
        },
        "sidebar": {
            "log_out": "Log out",
            "developer_tools": "Developer tools"
        },
        "common": {
            "loading": "Loading",
            "cancel": "Cancel"
        },
        "duration": {
            "day": "{count} {count, plural,\n  one {day}\n  other {days}\n}",
            "week": "{count} {count, plural,\n  one {week}\n  other {weeks}\n}",
            "second": "{count} {count, plural,\n  one {second}\n  other {seconds}\n}",
            "minute": "{count} {count, plural,\n  one {minute}\n  other {minutes}\n}",
            "hour": "{count} {count, plural,\n  one {hour}\n  other {hours}\n}"
        },
        "login-form": {
            "password": "Password",
            "remember": "Remember",
            "log_in": "Log in"
        },
        "card": {
            "camera": {
                "not_available": "Image not available"
            },
            "persistent_notification": {
                "dismiss": "Dismiss"
            },
            "scene": {
                "activate": "Activate"
            },
            "script": {
                "execute": "Execute"
            },
            "weather": {
                "attributes": {
                    "air_pressure": "Air pressure",
                    "humidity": "Humidity",
                    "temperature": "Temperature",
                    "visibility": "Visibility",
                    "wind_speed": "Wind speed"
                },
                "cardinal_direction": {
                    "e": "E",
                    "ene": "ENE",
                    "ese": "ESE",
                    "n": "N",
                    "ne": "NE",
                    "nne": "NNE",
                    "nw": "NW",
                    "nnw": "NNW",
                    "s": "S",
                    "se": "SE",
                    "sse": "SSE",
                    "ssw": "SSW",
                    "sw": "SW",
                    "w": "W",
                    "wnw": "WNW",
                    "wsw": "WSW"
                },
                "forecast": "Forecast"
            },
            "alarm_control_panel": {
                "code": "Code",
                "clear_code": "Clear",
                "disarm": "Disarm",
                "arm_home": "Arm home",
                "arm_away": "Arm away"
            },
            "automation": {
                "last_triggered": "Last triggered",
                "trigger": "Trigger"
            },
            "cover": {
                "position": "Position",
                "tilt_position": "Tilt position"
            },
            "fan": {
                "speed": "Speed",
                "oscillate": "Oscillate",
                "direction": "Direction"
            },
            "light": {
                "brightness": "Brightness",
                "color_temperature": "Color temperature",
                "white_value": "White value",
                "effect": "Effect"
            },
            "media_player": {
                "text_to_speak": "Text to speak",
                "source": "Source",
                "sound_mode": "Sound mode"
            },
            "climate": {
                "currently": "Currently",
                "on_off": "On \/ off",
                "target_temperature": "Target temperature",
                "target_humidity": "Target humidity",
                "operation": "Operation",
                "fan_mode": "Fan mode",
                "swing_mode": "Swing mode",
                "away_mode": "Away mode",
                "aux_heat": "Aux heat"
            },
            "lock": {
                "code": "Code",
                "lock": "Lock",
                "unlock": "Unlock"
            },
            "vacuum": {
                "actions": {
                    "resume_cleaning": "Resume cleaning",
                    "return_to_base": "Return to dock",
                    "start_cleaning": "Start cleaning",
                    "turn_on": "Turn on",
                    "turn_off": "Turn off"
                }
            },
            "water_heater": {
                "currently": "Currently",
                "on_off": "On \/ off",
                "target_temperature": "Target temperature",
                "operation": "Operation",
                "away_mode": "Away mode"
            }
        },
        "components": {
            "entity": {
                "entity-picker": {
                    "entity": "Entity"
                }
            },
            "service-picker": {
                "service": "Service"
            },
            "relative_time": {
                "past": "{time} ago",
                "future": "In {time}",
                "never": "Never",
                "duration": {
                    "second": "{count} {count, plural,\n  one {second}\n  other {seconds}\n}",
                    "minute": "{count} {count, plural,\n  one {minute}\n  other {minutes}\n}",
                    "hour": "{count} {count, plural,\n  one {hour}\n  other {hours}\n}",
                    "day": "{count} {count, plural,\n  one {day}\n  other {days}\n}",
                    "week": "{count} {count, plural,\n  one {week}\n  other {weeks}\n}"
                }
            },
            "history_charts": {
                "loading_history": "Loading state history...",
                "no_history_found": "No state history found."
            }
        },
        "notification_toast": {
            "entity_turned_on": "Turned on {entity}.",
            "entity_turned_off": "Turned off {entity}.",
            "service_called": "Service {service} called.",
            "service_call_failed": "Failed to call service {service}.",
            "connection_lost": "Connection lost. Reconnecting…"
        },
        "dialogs": {
            "more_info_settings": {
                "save": "Save",
                "name": "Name",
                "entity_id": "Entity ID"
            }
        },
        "auth_store": {
            "ask": "Do you want to save this login?",
            "decline": "No thanks",
            "confirm": "Save login"
        },
        "notification_drawer": {
            "click_to_configure": "Click button to configure {entity}",
            "empty": "No Notifications",
            "title": "Notifications"
        }
    },
    "domain": {
        "alarm_control_panel": "Alarm control panel",
        "automation": "Automation",
        "binary_sensor": "Binary sensor",
        "calendar": "Calendar",
        "camera": "Camera",
        "climate": "Climate",
        "configurator": "Configurator",
        "conversation": "Conversation",
        "cover": "Cover",
        "device_tracker": "Device tracker",
        "fan": "Fan",
        "history_graph": "History graph",
        "group": "Group",
        "image_processing": "Image processing",
        "input_boolean": "Input boolean",
        "input_datetime": "Input datetime",
        "input_select": "Input select",
        "input_number": "Input number",
        "input_text": "Input text",
        "light": "Light",
        "lock": "Lock",
        "mailbox": "Mailbox",
        "media_player": "Media player",
        "notify": "Notify",
        "plant": "Plant",
        "proximity": "Proximity",
        "remote": "Remote",
        "scene": "Scene",
        "script": "Script",
        "sensor": "Sensor",
        "sun": "Sun",
        "switch": "Switch",
        "updater": "Updater",
        "weblink": "Weblink",
        "zwave": "Z-Wave",
        "vacuum": "Vacuum"
    },
    "attribute": {
        "weather": {
            "humidity": "Humidity",
            "visibility": "Visibility",
            "wind_speed": "Wind speed"
        }
    }
}