#!/bin/sh
# Builds the frontend for production

# Stop on errors
set -e

cd "$(dirname "$0")/.."

OUTPUT_DIR=hass_frontend
OUTPUT_DIR_ES5=hass_frontend_es5

rm -rf $OUTPUT_DIR $OUTPUT_DIR_ES5
cp -r public $OUTPUT_DIR
mkdir $OUTPUT_DIR_ES5
cp -r public/__init__.py $OUTPUT_DIR_ES5/

# Build frontend
BUILD_DEV=0 ./node_modules/.bin/gulp
NODE_ENV=production webpack -p

# Copy frontend to output
cp build/webpack/* $OUTPUT_DIR
cp build/webpack-es5/* $OUTPUT_DIR_ES5

# Local Roboto
cp -r node_modules/@polymer/font-roboto-local/fonts $OUTPUT_DIR

# Polyfill web components
cp node_modules/@webcomponents/webcomponentsjs/webcomponents-bundle.js $OUTPUT_DIR
cp node_modules/@webcomponents/webcomponentsjs/custom-elements-es5-adapter.js $OUTPUT_DIR_ES5

# Icons
script/update_mdi.py

# Leaflet
mkdir $OUTPUT_DIR/images/leaflet
cp node_modules/leaflet/dist/leaflet.css $OUTPUT_DIR/images/leaflet
cp -r node_modules/leaflet/dist/images $OUTPUT_DIR/images/leaflet/

# Generate service worker
BUILD_DEV=0 ./node_modules/.bin/gulp gen-service-worker-es5
cp build-es5/service_worker.js $OUTPUT_DIR_ES5
BUILD_DEV=0 ./node_modules/.bin/gulp gen-service-worker
cp build/service_worker.js $OUTPUT_DIR

./node_modules/.bin/gulp compress

# Generate the __init__ file
echo "VERSION = '`git rev-parse HEAD`'" >> $OUTPUT_DIR/__init__.py
echo "CREATED_AT = `date +%s`" >> $OUTPUT_DIR/__init__.py
echo "VERSION = '`git rev-parse HEAD`'" >> $OUTPUT_DIR_ES5/__init__.py
echo "CREATED_AT = `date +%s`" >> $OUTPUT_DIR_ES5/__init__.py

# Generate the MD5 hash of the new frontend
./node_modules/.bin/gulp gen-index-html
./node_modules/.bin/gulp gen-index-html-es5
